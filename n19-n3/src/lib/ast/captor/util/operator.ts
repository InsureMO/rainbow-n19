export enum AstOperators {
	Assign = '=',
	GreaterThan = '>',
	LessThan = '<',
	Not = '!',
	Bitnot = '~',
	Question = '?',
	Colon = ':',
	Equal = '==',
	LessThanOrEqual = '<=',
	GreaterThanOrEqual = '>=',
	NotEqual = '!=',
	And = '&&',
	Or = '||',
	Increase = '++',
	Decrease = '--',
	Add = '+',
	Subtract = '-',
	Multiple = '*',
	Divide = '/',
	Bitand = '&',
	Bitor = '|',
	Xor = '^',
	Mod = '%',
	AddAssign = '+=',
	SubtractAssign = '-=',
	MultipleAssign = '*=',
	DivideAssign = '/=',
	BitandAssign = '&=',
	BitorAssign = '|=',
	XorAssign = '^=',
	ModAssign = '%=',
	LshiftAssign = '<<=',
	RshiftAssign = '>>=',
	UrshiftAssign = '>>>=',
	ElvisAssign = '?=',
	Ellipsis = '...',
	// groovy
	RangeInclusive = '..',
	RangeExclusiveLeft = '<..',
	RangeExclusiveRight = '..<',
	RangeExclusiveFull = '<..<',
	SpreadDot = '*.',
	SafeDot = '?.',
	SafeIndex = '?[',
	SafeIndexClose = ']',
	SafeChainDot = '??.',
	Elvis = '?:',
	MethodPointer = '.&',
	MethodReference = '::',
	RegexFind = '=~',
	RegexMatch = '==~',
	Power = '**',
	PowerAssign = '**=',
	Spaceship = '<=>',
	Identical = '===',
	NotIdentical = '!==',
	Arrow = '->',
	NotInstanceof = '!instanceof',
	NotIn = '!in'
}