import {TokenId} from '../../tokens';
import {PointcutBasisType} from './internal';

export const PointcutBasis: Readonly<Partial<{ [key in TokenId]: PointcutBasisType }>> = {
	// number literal
	[TokenId.BinaryLiteral]: 'TODO',
	[TokenId.OctalLiteral]: 'TODO',
	[TokenId.HexadecimalLiteral]: 'TODO',
	[TokenId.IntegralLiteral]: 'TODO',
	[TokenId.DecimalLiteral]: 'TODO',
	// char literal
	[TokenId.CharLiteral]: 'TODO',
	// string literal
	[TokenId.StringLiteral]: 'TODO',
	[TokenId.GStringInterpolation]: 'TODO',
	[TokenId.GStringLiteral]: 'TODO',
	[TokenId.SlashyGStringLiteral]: 'TODO',
	[TokenId.DollarSlashyGStringLiteral]: 'TODO',
	// statement
	[TokenId.SingleLineComment]: 'TODO',
	[TokenId.MultipleLinesComment]: 'TODO',
	[TokenId.ScriptCommand]: 'TODO',
	[TokenId.PackageDeclaration]: 'TODO',
	[TokenId.ImportDeclaration]: 'TODO',
	[TokenId.ImportAllMark]: 'TODO',
	[TokenId.InterfaceDeclaration]: 'TODO',
	[TokenId.ClassDeclaration]: 'TODO',
	[TokenId.AtInterfaceClassDeclaration]: 'TODO',
	[TokenId.EnumClassDeclaration]: 'TODO',
	[TokenId.RecordClassDeclaration]: 'TODO',
	[TokenId.TraitClassDeclaration]: 'TODO',
	[TokenId.ClassBody]: 'TODO',
	[TokenId.StaticBlockDeclaration]: 'TODO',
	[TokenId.StaticBlockBody]: 'TODO',
	[TokenId.ConstructorDeclaration]: 'TODO',
	[TokenId.ConstructorBody]: 'TODO',
	[TokenId.MethodDeclaration]: 'TODO',
	[TokenId.MethodBody]: 'TODO',
	[TokenId.FieldDeclaration]: 'TODO',
	[TokenId.AnnotationDeclaration]: 'TODO',
	[TokenId.GenericTypeDeclaration]: 'TODO',
	[TokenId.SynchronizedBlockDeclaration]: 'TODO',
	[TokenId.SynchronizedBlockBody]: 'TODO',
	[TokenId.IfDeclaration]: 'TODO',
	[TokenId.IfIfDeclaration]: 'TODO',
	[TokenId.IfIfBody]: 'TODO',
	[TokenId.IfElseIfDeclaration]: 'TODO',
	[TokenId.IfElseIfBody]: 'TODO',
	[TokenId.IfElseDeclaration]: 'TODO',
	[TokenId.IfElseBody]: 'TODO',
	[TokenId.SwitchDeclaration]: 'TODO',
	[TokenId.SwitchBody]: 'TODO',
	[TokenId.SwitchCaseDeclaration]: 'TODO',
	[TokenId.SwitchDefaultDeclaration]: 'TODO',
	[TokenId.WhileDeclaration]: 'TODO',
	[TokenId.WhileBody]: 'TODO',
	[TokenId.DoWhileDeclaration]: 'TODO',
	[TokenId.DoWhileBody]: 'TODO',
	[TokenId.ForDeclaration]: 'TODO',
	[TokenId.ForBody]: 'TODO',
	[TokenId.TryDeclaration]: 'TODO',
	[TokenId.TryTryDeclaration]: 'TODO',
	[TokenId.TryTryBody]: 'TODO',
	[TokenId.TryCatchDeclaration]: 'TODO',
	[TokenId.TryCatchBody]: 'TODO',
	[TokenId.TryFinallyDeclaration]: 'TODO',
	[TokenId.TryFinallyBody]: 'TODO',
	[TokenId.Closure]: 'TODO',
	[TokenId.LambdaDeclaration]: 'TODO',
	[TokenId.LambdaBody]: 'TODO',
	[TokenId.CodeBlock]: 'TODO',
	[TokenId.ParenBlock]: 'TODO',
	[TokenId.AssertStatement]: 'TODO',
	[TokenId.BreakStatement]: 'TODO',
	[TokenId.ContinueStatement]: 'TODO',
	[TokenId.DefStatement]: 'TODO',
	[TokenId.VarStatement]: 'TODO',
	[TokenId.NewExpression]: 'TODO',
	[TokenId.ThrowStatement]: 'TODO',
	[TokenId.ArrayInitializer]: 'TODO',
	[TokenId.AtFieldPathElement]: 'TODO',
	// temporary
	[TokenId.Tmp$CsscmfDeclaration]: 'TODO',
	[TokenId.Tmp$NeverHappen]: 'TODO'
};
