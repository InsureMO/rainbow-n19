import {Frame} from './Frame';

export class Opcodes {
	static readonly ASM4: number = 4 << 16 | 0 << 8;
	static readonly ASM5: number = 5 << 16 | 0 << 8;
	static readonly ASM6: number = 6 << 16 | 0 << 8;
	static readonly ASM7: number = 7 << 16 | 0 << 8;
	static readonly ASM8: number = 8 << 16 | 0 << 8;
	static readonly ASM9: number = 9 << 16 | 0 << 8;

	/**
	 * @deprecated This API is experimental.
	 */
	static readonly ASM10_EXPERIMENTAL: number = 1 << 24 | 10 << 16 | 0 << 8;

	static readonly SOURCE_DEPRECATED: number = 0x100;
	static readonly SOURCE_MASK: number = Opcodes.SOURCE_DEPRECATED;

	static readonly V1_1: number = 3 << 16 | 45;
	static readonly V1_2: number = 0 << 16 | 46;
	static readonly V1_3: number = 0 << 16 | 47;
	static readonly V1_4: number = 0 << 16 | 48;
	static readonly V1_5: number = 0 << 16 | 49;
	static readonly V1_6: number = 0 << 16 | 50;
	static readonly V1_7: number = 0 << 16 | 51;
	static readonly V1_8: number = 0 << 16 | 52;
	static readonly V9: number = 0 << 16 | 53;
	static readonly V10: number = 0 << 16 | 54;
	static readonly V11: number = 0 << 16 | 55;
	static readonly V12: number = 0 << 16 | 56;
	static readonly V13: number = 0 << 16 | 57;
	static readonly V14: number = 0 << 16 | 58;
	static readonly V15: number = 0 << 16 | 59;
	static readonly V16: number = 0 << 16 | 60;
	static readonly V17: number = 0 << 16 | 61;
	static readonly V18: number = 0 << 16 | 62;
	static readonly V19: number = 0 << 16 | 63;
	static readonly V20: number = 0 << 16 | 64;
	static readonly V21: number = 0 << 16 | 65;
	static readonly V22: number = 0 << 16 | 66;
	static readonly V23: number = 0 << 16 | 67;
	static readonly V24: number = 0 << 16 | 68;
	static readonly V25: number = 0 << 16 | 69;

	static readonly V_PREVIEW: number = 0xFFFF0000;

	static readonly ACC_PUBLIC: number = 0x0001; // class, field, method
	static readonly ACC_PRIVATE: number = 0x0002; // class, field, method
	static readonly ACC_PROTECTED: number = 0x0004; // class, field, method
	static readonly ACC_STATIC: number = 0x0008; // field, method
	static readonly ACC_FINAL: number = 0x0010; // class, field, method, parameter
	static readonly ACC_SUPER: number = 0x0020; // class
	static readonly ACC_SYNCHRONIZED: number = 0x0020; // method
	static readonly ACC_OPEN: number = 0x0020; // module
	static readonly ACC_TRANSITIVE: number = 0x0020; // module requires
	static readonly ACC_VOLATILE: number = 0x0040; // field
	static readonly ACC_BRIDGE: number = 0x0040; // method
	static readonly ACC_STATIC_PHASE: number = 0x0040; // module requires
	static readonly ACC_VARARGS: number = 0x0080; // method
	static readonly ACC_TRANSIENT: number = 0x0080; // field
	static readonly ACC_NATIVE: number = 0x0100; // method
	static readonly ACC_INTERFACE: number = 0x0200; // class
	static readonly ACC_ABSTRACT: number = 0x0400; // class, method
	static readonly ACC_STRICT: number = 0x0800; // method
	static readonly ACC_SYNTHETIC: number = 0x1000; // class, field, method, parameter, module *
	static readonly ACC_ANNOTATION: number = 0x2000; // class
	static readonly ACC_ENUM: number = 0x4000; // class(?) field inner
	static readonly ACC_MANDATED: number = 0x8000; // field, method, parameter, module, module *
	static readonly ACC_MODULE: number = 0x8000; // class

	static readonly ACC_RECORD: number = 0x10000; // class
	static readonly ACC_DEPRECATED: number = 0x20000; // class, field, method

	static readonly T_BOOLEAN: number = 4;
	static readonly T_CHAR: number = 5;
	static readonly T_FLOAT: number = 6;
	static readonly T_DOUBLE: number = 7;
	static readonly T_BYTE: number = 8;
	static readonly T_SHORT: number = 9;
	static readonly T_INT: number = 10;
	static readonly T_LONG: number = 11;

	static readonly H_GETFIELD: number = 1;
	static readonly H_GETSTATIC: number = 2;
	static readonly H_PUTFIELD: number = 3;
	static readonly H_PUTSTATIC: number = 4;
	static readonly H_INVOKEVIRTUAL: number = 5;
	static readonly H_INVOKESTATIC: number = 6;
	static readonly H_INVOKESPECIAL: number = 7;
	static readonly H_NEWINVOKESPECIAL: number = 8;
	static readonly H_INVOKEINTERFACE: number = 9;

	static readonly F_NEW: number = -1;

	static readonly F_FULL: number = 0;

	static readonly F_APPEND: number = 1;

	static readonly F_CHOP: number = 2;

	static readonly F_SAME: number = 3;

	static readonly F_SAME1: number = 4;

	static readonly TOP: number = Frame.ITEM_TOP;
	static readonly INTEGER: number = Frame.ITEM_INTEGER;
	static readonly FLOAT: number = Frame.ITEM_FLOAT;
	static readonly DOUBLE: number = Frame.ITEM_DOUBLE;
	static readonly LONG: number = Frame.ITEM_LONG;
	static readonly NULL: number = Frame.ITEM_NULL;
	static readonly UNINITIALIZED_THIS: number = Frame.ITEM_UNINITIALIZED_THIS;

	static readonly NOP: number = 0; // visitInsn
	static readonly ACONST_NULL: number = 1; // -
	static readonly ICONST_M1: number = 2; // -
	static readonly ICONST_0: number = 3; // -
	static readonly ICONST_1: number = 4; // -
	static readonly ICONST_2: number = 5; // -
	static readonly ICONST_3: number = 6; // -
	static readonly ICONST_4: number = 7; // -
	static readonly ICONST_5: number = 8; // -
	static readonly LCONST_0: number = 9; // -
	static readonly LCONST_1: number = 10; // -
	static readonly FCONST_0: number = 11; // -
	static readonly FCONST_1: number = 12; // -
	static readonly FCONST_2: number = 13; // -
	static readonly DCONST_0: number = 14; // -
	static readonly DCONST_1: number = 15; // -
	static readonly BIPUSH: number = 16; // visitIntInsn
	static readonly SIPUSH: number = 17; // -
	static readonly LDC: number = 18; // visitLdcInsn
	static readonly ILOAD: number = 21; // visitVarInsn
	static readonly LLOAD: number = 22; // -
	static readonly FLOAD: number = 23; // -
	static readonly DLOAD: number = 24; // -
	static readonly ALOAD: number = 25; // -
	static readonly IALOAD: number = 46; // visitInsn
	static readonly LALOAD: number = 47; // -
	static readonly FALOAD: number = 48; // -
	static readonly DALOAD: number = 49; // -
	static readonly AALOAD: number = 50; // -
	static readonly BALOAD: number = 51; // -
	static readonly CALOAD: number = 52; // -
	static readonly SALOAD: number = 53; // -
	static readonly ISTORE: number = 54; // visitVarInsn
	static readonly LSTORE: number = 55; // -
	static readonly FSTORE: number = 56; // -
	static readonly DSTORE: number = 57; // -
	static readonly ASTORE: number = 58; // -
	static readonly IASTORE: number = 79; // visitInsn
	static readonly LASTORE: number = 80; // -
	static readonly FASTORE: number = 81; // -
	static readonly DASTORE: number = 82; // -
	static readonly AASTORE: number = 83; // -
	static readonly BASTORE: number = 84; // -
	static readonly CASTORE: number = 85; // -
	static readonly SASTORE: number = 86; // -
	static readonly POP: number = 87; // -
	static readonly POP2: number = 88; // -
	static readonly DUP: number = 89; // -
	static readonly DUP_X1: number = 90; // -
	static readonly DUP_X2: number = 91; // -
	static readonly DUP2: number = 92; // -
	static readonly DUP2_X1: number = 93; // -
	static readonly DUP2_X2: number = 94; // -
	static readonly SWAP: number = 95; // -
	static readonly IADD: number = 96; // -
	static readonly LADD: number = 97; // -
	static readonly FADD: number = 98; // -
	static readonly DADD: number = 99; // -
	static readonly ISUB: number = 100; // -
	static readonly LSUB: number = 101; // -
	static readonly FSUB: number = 102; // -
	static readonly DSUB: number = 103; // -
	static readonly IMUL: number = 104; // -
	static readonly LMUL: number = 105; // -
	static readonly FMUL: number = 106; // -
	static readonly DMUL: number = 107; // -
	static readonly IDIV: number = 108; // -
	static readonly LDIV: number = 109; // -
	static readonly FDIV: number = 110; // -
	static readonly DDIV: number = 111; // -
	static readonly IREM: number = 112; // -
	static readonly LREM: number = 113; // -
	static readonly FREM: number = 114; // -
	static readonly DREM: number = 115; // -
	static readonly INEG: number = 116; // -
	static readonly LNEG: number = 117; // -
	static readonly FNEG: number = 118; // -
	static readonly DNEG: number = 119; // -
	static readonly ISHL: number = 120; // -
	static readonly LSHL: number = 121; // -
	static readonly ISHR: number = 122; // -
	static readonly LSHR: number = 123; // -
	static readonly IUSHR: number = 124; // -
	static readonly LUSHR: number = 125; // -
	static readonly IAND: number = 126; // -
	static readonly LAND: number = 127; // -
	static readonly IOR: number = 128; // -
	static readonly LOR: number = 129; // -
	static readonly IXOR: number = 130; // -
	static readonly LXOR: number = 131; // -
	static readonly IINC: number = 132; // visitIincInsn
	static readonly I2L: number = 133; // visitInsn
	static readonly I2F: number = 134; // -
	static readonly I2D: number = 135; // -
	static readonly L2I: number = 136; // -
	static readonly L2F: number = 137; // -
	static readonly L2D: number = 138; // -
	static readonly F2I: number = 139; // -
	static readonly F2L: number = 140; // -
	static readonly F2D: number = 141; // -
	static readonly D2I: number = 142; // -
	static readonly D2L: number = 143; // -
	static readonly D2F: number = 144; // -
	static readonly I2B: number = 145; // -
	static readonly I2C: number = 146; // -
	static readonly I2S: number = 147; // -
	static readonly LCMP: number = 148; // -
	static readonly FCMPL: number = 149; // -
	static readonly FCMPG: number = 150; // -
	static readonly DCMPL: number = 151; // -
	static readonly DCMPG: number = 152; // -
	static readonly IFEQ: number = 153; // visitJumpInsn
	static readonly IFNE: number = 154; // -
	static readonly IFLT: number = 155; // -
	static readonly IFGE: number = 156; // -
	static readonly IFGT: number = 157; // -
	static readonly IFLE: number = 158; // -
	static readonly IF_ICMPEQ: number = 159; // -
	static readonly IF_ICMPNE: number = 160; // -
	static readonly IF_ICMPLT: number = 161; // -
	static readonly IF_ICMPGE: number = 162; // -
	static readonly IF_ICMPGT: number = 163; // -
	static readonly IF_ICMPLE: number = 164; // -
	static readonly IF_ACMPEQ: number = 165; // -
	static readonly IF_ACMPNE: number = 166; // -
	static readonly GOTO: number = 167; // -
	static readonly JSR: number = 168; // -
	static readonly RET: number = 169; // visitVarInsn
	static readonly TABLESWITCH: number = 170; // visiTableSwitchInsn
	static readonly LOOKUPSWITCH: number = 171; // visitLookupSwitch
	static readonly IRETURN: number = 172; // visitInsn
	static readonly LRETURN: number = 173; // -
	static readonly FRETURN: number = 174; // -
	static readonly DRETURN: number = 175; // -
	static readonly ARETURN: number = 176; // -
	static readonly RETURN: number = 177; // -
	static readonly GETSTATIC: number = 178; // visitFieldInsn
	static readonly PUTSTATIC: number = 179; // -
	static readonly GETFIELD: number = 180; // -
	static readonly PUTFIELD: number = 181; // -
	static readonly INVOKEVIRTUAL: number = 182; // visitMethodInsn
	static readonly INVOKESPECIAL: number = 183; // -
	static readonly INVOKESTATIC: number = 184; // -
	static readonly INVOKEINTERFACE: number = 185; // -
	static readonly INVOKEDYNAMIC: number = 186; // visitInvokeDynamicInsn
	static readonly NEW: number = 187; // visitTypeInsn
	static readonly NEWARRAY: number = 188; // visitIntInsn
	static readonly ANEWARRAY: number = 189; // visitTypeInsn
	static readonly ARRAYLENGTH: number = 190; // visitInsn
	static readonly ATHROW: number = 191; // -
	static readonly CHECKCAST: number = 192; // visitTypeInsn
	static readonly INSTANCEOF: number = 193; // -
	static readonly MONITORENTER: number = 194; // visitInsn
	static readonly MONITOREXIT: number = 195; // -
	static readonly MULTIANEWARRAY: number = 197; // visitMultiANewArrayInsn
	static readonly IFNULL: number = 198; // visitJumpInsn
	static readonly IFNONNULL: number = 199; // -
}
